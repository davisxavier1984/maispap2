"""
P√°gina dedicada para gera√ß√£o de relat√≥rios PDF.
"""
import streamlit as st
from datetime import datetime
import pandas as pd

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Relat√≥rios PDF - Calculadora PAP",
    page_icon="üìÑ",
    layout="wide"
)

def main():
    st.title("üìÑ Relat√≥rios PDF")
    st.markdown("---")
    
    # Verificar se existem c√°lculos realizados
    if not st.session_state.get('calculo_realizado', False):
        st.warning("‚ö†Ô∏è **Nenhum c√°lculo foi realizado ainda**")
        st.info("""
        Para gerar relat√≥rios PDF, voc√™ precisa primeiro:
        
        1. Ir para a p√°gina **Calculadora PAP**
        2. Configurar os dados do munic√≠pio
        3. Selecionar os servi√ßos
        4. Realizar os c√°lculos
        
        Ap√≥s isso, retorne a esta p√°gina para gerar os relat√≥rios.
        """)
        
        if st.button("üîô Ir para Calculadora PAP", use_container_width=True):
            st.switch_page("app.py")
        return
    
    # Informa√ß√µes sobre os dados calculados
    st.subheader("üìä Dados dos C√°lculos Realizados")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        municipio = st.session_state.get('municipio_selecionado', 'N√£o informado')
        st.metric("Munic√≠pio", municipio)
        
    with col2:
        uf = st.session_state.get('uf_selecionada', 'N√£o informado')
        st.metric("UF", uf)
        
    with col3:
        competencia = st.session_state.get('competencia_selecionada', 'N√£o informado')
        st.metric("Compet√™ncia", competencia)
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        populacao = st.session_state.get('populacao', 0)
        st.metric("Popula√ß√£o", f"{populacao:,}".replace(',', '.'))
        
    with col2:
        classificacao = st.session_state.get('classificacao', 'N√£o informado')
        st.metric("Classifica√ß√£o", classificacao)
        
    with col3:
        vinculo = st.session_state.get('vinculo', 'N√£o informado')
        st.metric("V√≠nculo", vinculo)
    
    # Total PAP calculado
    total_pap = st.session_state.get('total_pap_calculado', 0)
    if total_pap > 0:
        st.success(f"üí∞ **Total PAP Calculado:** R$ {total_pap:,.2f}".replace(',', '.'))
    
    st.markdown("---")
    
    # Se√ß√£o de gera√ß√£o de relat√≥rios
    st.subheader("üìã Gera√ß√£o de Relat√≥rios PDF")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.write("""
        **O relat√≥rio PDF inclui:**
        
        ‚úÖ **P√°gina de Capa** - Identifica√ß√£o completa do relat√≥rio  
        ‚úÖ **Dados do Munic√≠pio** - Informa√ß√µes b√°sicas e contextuais  
        ‚úÖ **Fundamenta√ß√£o Legal** - Base legal e metodologia  
        ‚úÖ **Configura√ß√£o dos Servi√ßos** - Servi√ßos selecionados e quantidades  
        ‚úÖ **C√°lculos Detalhados** - Todos os 6 componentes PAP  
        ‚úÖ **An√°lise de Cen√°rios** - Compara√ß√µes e proje√ß√µes  
        ‚úÖ **Gr√°ficos Integrados** - Visualiza√ß√µes profissionais  
        ‚úÖ **Resumo Executivo** - Totais, insights e recomenda√ß√µes  
        """)
    
    with col2:
        st.info("""
        **Especifica√ß√µes:**
        
        üìÑ Formato: A4  
        üìä Gr√°ficos: Alta qualidade  
        üé® Design: Profissional  
        ‚ö° Tempo: 3-8 segundos  
        üíæ Tamanho: 500KB-2MB  
        """)
    
    st.markdown("---")
    
    # Verifica√ß√£o de depend√™ncias e gera√ß√£o do relat√≥rio
    try:
        # Tentar importar as depend√™ncias do sistema de relat√≥rios
        from reports.pdf_generator import generate_pap_report
        from reports.pdf_generator_interface_replica import generate_interface_replica_report
        
        # Mostrar bot√µes de gera√ß√£o se as depend√™ncias est√£o dispon√≠veis
        st.subheader("üöÄ Op√ß√µes de Relat√≥rio")
        
        # Criar duas colunas para os tipos de relat√≥rio
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("### üìÑ Relat√≥rio Completo")
            st.write("Relat√≥rio detalhado com an√°lises, contexto legal e visualiza√ß√µes completas.")
            
            if st.button("üìÑ Gerar Relat√≥rio Completo", 
                        use_container_width=True, 
                        type="primary",
                        help="Relat√≥rio completo com todas as se√ß√µes e an√°lises"):
                
                with st.spinner("Gerando relat√≥rio completo... Por favor, aguarde..."):
                    try:
                        pdf_data = generate_pap_report()
                        
                        if pdf_data and len(pdf_data) > 0:
                            municipio_nome = st.session_state.get('municipio_selecionado', 'municipio').replace(' ', '_')
                            timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
                            filename = f"relatorio_pap_completo_{municipio_nome}_{timestamp}.pdf"
                            
                            st.success("‚úÖ **Relat√≥rio Completo gerado com sucesso!**")
                            
                            col_info1, col_info2 = st.columns(2)
                            with col_info1:
                                st.metric("Tamanho", f"{len(pdf_data)/1024:.1f} KB")
                            with col_info2:
                                st.metric("P√°ginas", "8-15 p√°ginas")
                            
                            st.download_button(
                                label="‚¨áÔ∏è Baixar Relat√≥rio Completo",
                                data=pdf_data,
                                file_name=filename,
                                mime="application/pdf",
                                use_container_width=True,
                                help=f"Baixar: {filename}"
                            )
                            
                        else:
                            st.error("‚ùå Erro: Relat√≥rio vazio")
                            
                    except Exception as e:
                        st.error(f"‚ùå Erro ao gerar relat√≥rio: {str(e)}")
        
        with col2:
            st.markdown("### üìä Relat√≥rio Interface")
            st.write("Replica exatamente os gr√°ficos e tabelas da interface, incluindo todas as tabelas de cen√°rios.")
            
            if st.button("üìä Gerar Relat√≥rio Interface", 
                        use_container_width=True, 
                        type="secondary",
                        help="Replica exatamente os gr√°ficos e tabelas da interface"):
                
                with st.spinner("Gerando relat√≥rio interface... Por favor, aguarde..."):
                    try:
                        pdf_data = generate_interface_replica_report()
                        
                        if pdf_data and len(pdf_data) > 0:
                            municipio_nome = st.session_state.get('municipio_selecionado', 'municipio').replace(' ', '_')
                            timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
                            filename = f"relatorio_pap_interface_{municipio_nome}_{timestamp}.pdf"
                            
                            st.success("‚úÖ **Relat√≥rio Interface gerado com sucesso!**")
                            
                            col_info1, col_info2 = st.columns(2)
                            with col_info1:
                                st.metric("Tamanho", f"{len(pdf_data)/1024:.1f} KB")
                            with col_info2:
                                st.metric("P√°ginas", "5-10 p√°ginas")
                            
                            st.download_button(
                                label="‚¨áÔ∏è Baixar Relat√≥rio Interface",
                                data=pdf_data,
                                file_name=filename,
                                mime="application/pdf",
                                use_container_width=True,
                                help=f"Baixar: {filename}"
                            )
                            
                            # Destacar o que inclui
                            st.info("""
                            **Este relat√≥rio inclui:**
                            ‚úÖ Todas as tabelas de c√°lculos da interface
                            ‚úÖ Quadro comparativo de cen√°rios (com cores)
                            ‚úÖ Tabelas detalhadas por cen√°rio
                            ‚úÖ Gr√°ficos de proje√ß√£o (barras, linhas, pizza)
                            ‚úÖ Tabelas de proje√ß√£o temporal
                            """)
                            
                        else:
                            st.error("‚ùå Erro: Relat√≥rio vazio")
                            
                    except Exception as e:
                        st.error(f"‚ùå Erro ao gerar relat√≥rio interface: {str(e)}")
        
        # Informa√ß√µes comparativas
        st.markdown("---")
        st.subheader("üìã Compara√ß√£o dos Relat√≥rios")
        
        comparison_data = {
            'Aspecto': [
                'Tabelas de C√°lculos',
                'Tabelas de Cen√°rios',
                'Gr√°ficos da Interface',
                'An√°lise Legal/Contextual',
                'Conclus√µes e Recomenda√ß√µes',
                'P√°ginas T√≠picas',
                'Foco Principal'
            ],
            'Relat√≥rio Completo': [
                '‚úÖ Todas',
                '‚úÖ Sim',
                '‚úÖ Modernos',
                '‚úÖ Detalhada',
                '‚úÖ Sim',
                '8-15',
                'An√°lise completa'
            ],
            'Relat√≥rio Interface': [
                '‚úÖ Todas (id√™nticas)',
                '‚úÖ Todas (com cores)',
                '‚úÖ Id√™nticos √† interface',
                '‚ùå N√£o',
                '‚ùå N√£o',
                '5-10',
                'Replica interface'
            ]
        }
        
        df_comparison = pd.DataFrame(comparison_data)
        st.table(df_comparison)
    
    except ImportError as e:
        # Caso as depend√™ncias n√£o estejam instaladas
        st.warning("üì¶ **Depend√™ncias do Sistema de Relat√≥rios PDF n√£o encontradas**")
        
        st.info("""
        **Para habilitar o gerador de relat√≥rios PDF, instale as depend√™ncias:**
        
        ```bash
        pip install reportlab matplotlib pillow
        ```
        
        **Ou instale todas as depend√™ncias do projeto:**
        
        ```bash
        pip install -r requirements.txt
        ```
        """)
        
        st.error(f"**Detalhes do erro:** {str(e)}")
        
        # Expandir com instru√ß√µes detalhadas
        with st.expander("üìã Instru√ß√µes Detalhadas de Instala√ß√£o"):
            st.code("""
# PASSO 1: Abra o terminal/prompt de comando

# PASSO 2: Navegue at√© a pasta do projeto (se necess√°rio)
cd caminho/para/o/projeto

# PASSO 3: Execute um dos comandos abaixo:

# Op√ß√£o A - Instalar depend√™ncias espec√≠ficas do PDF
pip install reportlab matplotlib pillow

# Op√ß√£o B - Instalar todas as depend√™ncias do projeto  
pip install -r requirements.txt

# PASSO 4: Ap√≥s a instala√ß√£o, reinicie a aplica√ß√£o
streamlit run app.py

# PASSO 5: Retorne a esta p√°gina para gerar relat√≥rios
            """, language="bash")
            
            st.success("üí° **Dica:** Ap√≥s instalar as depend√™ncias, atualize esta p√°gina para que o sistema de relat√≥rios PDF fique dispon√≠vel!")
    
    st.markdown("---")
    
    # Se√ß√£o de hist√≥rico (futura implementa√ß√£o)
    with st.expander("üìà Funcionalidades Futuras"):
        st.write("""
        **Pr√≥ximas atualiza√ß√µes incluir√£o:**
        
        üîÑ **Hist√≥rico de Relat√≥rios** - Lista de relat√≥rios gerados anteriormente  
        üìä **Comparativos** - Relat√≥rios comparando diferentes cen√°rios  
        üìß **Envio por Email** - Enviar relat√≥rios diretamente por email  
        üé® **Templates Personalizados** - Diferentes layouts e estilos  
        üì± **Vers√£o Mobile** - Relat√≥rios otimizados para dispositivos m√≥veis  
        ‚òÅÔ∏è **Salvamento em Nuvem** - Armazenar relat√≥rios online  
        """)
    
    # Rodap√© com informa√ß√µes
    st.markdown("---")
    st.markdown("""
    <div style='text-align: center; color: #666; font-size: 0.9em;'>
        üìÑ Sistema de Relat√≥rios PDF - Calculadora PAP<br>
        Desenvolvido com Streamlit, ReportLab e Matplotlib
    </div>
    """, unsafe_allow_html=True)

main()
